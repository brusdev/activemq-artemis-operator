name: Release

env:
  IMAGE_NAME: activemq-artemis-operator

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Check doc.crds.dev
        run: for i in {1..30}; do curl "https://doc.crds.dev/github.com/${{ github.repository }}@${{ github.ref_name }}" | grep 'ActiveMQArtemis' && break; sleep 1; done

      - name: Checkout artemiscloud.github.io
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/artemiscloud.github.io
          path: artemiscloud.github.io
          token: ${{ secrets.BOT_TOKEN }}

      - name: Build the docs
        run: >
          rm -rf artemiscloud.github.io/content/en/docs &&
          cp -r docs artemiscloud.github.io/content/en &&
          cd artemiscloud.github.io &&
          npm install && npm run build

      - name: Push the docs
        run: >
          cd artemiscloud.github.io &&
          git config user.name 'ArtemisCloud Bot' &&
          git config user.email 'artemiscloudbot@users.noreply.github.com' &&
          git add --all && git commit --all --allow-empty --message 'Update docs to ${{ github.ref_name }}' && git push

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - uses: actions/github-script@v6
        id: define-tags
        env:
          IMAGE_NAME: activemq-artemis-operator
          QUAY_NAMESPACE: ${{ secrets.QUAY_NAMESPACE }}
        with:
          result-encoding: string
          script: |
            const versionTag = "quay.io/${{ secrets.QUAY_NAMESPACE }}/${{ env.IMAGE_NAME }}:" + "${{ github.ref_name }}".substring(1)
            const latestTag = "quay.io/${{ secrets.QUAY_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest"
            return versionTag + "," + latestTag

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.define-tags.outputs.result }}

      - name: Build the bundle image
        run: export BUNDLE_IMG=$IMAGE_NAME-bundle:latest && make bundle-build

      - name: Push the bundle image
        run: >
          export IMAGE_TAG=${GITHUB_REF#refs/tags/v} &&
          docker login --username=${{ secrets.QUAY_USERNAME }} --password=${{ secrets.QUAY_PASSWORD }} quay.io &&
          docker tag $IMAGE_NAME:latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME-bundle:$IMAGE_TAG &&
          docker push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME-bundle:$IMAGE_TAG &&
          docker tag $IMAGE_NAME:latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME-bundle:latest &&
          docker push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME-bundle:latest
