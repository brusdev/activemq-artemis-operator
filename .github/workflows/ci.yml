name: CI

env:
  IMAGE_NAME: activemq-artemis-operator
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OPM_VERSION: v1.54.0
  OPERATOR_SDK_VERSION: v1.28.0
  YQ_VERSION: v4.46.1

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '0 0 * * 0'
  workflow_dispatch:
    inputs:
      skipTests:
        description: 'Skip Tests'
        required: false
        default: false
        type: boolean
      skipDOTests:
        description: 'Skip DO Tests'
        required: false
        default: false
        type: boolean
      skipTutorials:
        description: 'Skip Tutorials'
        required: false
        default: false
        type: boolean
      skipCatalog:
        description: 'Skip Catalog'
        required: false
        default: false
        type: boolean

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.9'
          cache: true

      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Start minikube
        id: minikube
        uses: medyagh/setup-minikube@master
        with:
          cpus: 2
          memory: 4g
          addons: ingress

      - name: Enable minikube ingress-nginx ssl-passthrough
        run: >
          minikube kubectl -- patch deployment -n ingress-nginx ingress-nginx-controller --type='json' -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value":"--enable-ssl-passthrough"}]'

      - name: Check go.mod and go.sum files
        run: go mod tidy && git status && git diff-index --quiet HEAD --

      - name: Check generate files
        run: make build && make generate-deploy && make bundle && git status && git diff-index --quiet HEAD --
      
      - name: Build and push catalog image to Minikube
        # if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && !inputs.skipCatalog }}
        run: |
          make CATALOG_IMG=$IMAGE_NAME-catalog:dev.latest catalog-build
          docker save --output $IMAGE_NAME-catalog.tar $IMAGE_NAME-catalog:dev.latest
          minikube image load $IMAGE_NAME-catalog.tar
     
      - name: Install olm and verify pod readiness
        # if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && !inputs.skipCatalog }}
        run: |
          ./bin/operator-sdk olm install
           echo "Waiting for OLM pods to be ready..."
           minikube kubectl -- wait pod -l app=catalog-operator --for=condition=Ready --namespace=olm --timeout=2m
           minikube kubectl -- wait pod -l app=olm-operator --for=condition=Ready --namespace=olm --timeout=2m

      - name: Create and verify catalog source
        # if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && !inputs.skipCatalog }}
        run: |
          sed "s~image:.*~image: localhost/$IMAGE_NAME-catalog:dev.latest~" examples/catalog/catalog-source.yaml | minikube kubectl -- create -f -
          minikube kubectl -- wait catalogsource activemq-artemis-operator-source --for=jsonpath='{.status.connectionState.lastObservedState}'=READY --namespace=operators --timeout=5m
          minikube kubectl -- wait pod -l olm.catalogSource=activemq-artemis-operator-source --for=condition=Ready --namespace=operators --timeout=3m

      - name: Create and verify subscription
        # if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && !inputs.skipCatalog }}
        run: |
          minikube kubectl -- create -f ./examples/catalog/subscription.yaml
          minikube kubectl -- wait subscription activemq-artemis-operator-subscription --for=jsonpath='{.status.installplan.kind}'=InstallPlan --namespace=operators --timeout=3m
          minikube kubectl -- wait installplan -l operators.coreos.com/activemq-artemis-operator.operators='' --for=condition=Installed --namespace=operators --timeout=3m
          minikube kubectl -- wait pod -l name=activemq-artemis-operator --for=condition=Ready --namespace=operators --timeout=3m
